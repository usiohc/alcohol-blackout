version: '3.8'

services:
  db:
    image: mysql:8.0.35-debian
    restart: always
    container_name: db
    command: 
      - --lower_case_table_names=1
    env_file:
      - .env.prod
    environment:
      TZ: Asia/Seoul
    expose:
      - "3306"
    volumes:
      - ./db/data:/var/lib/mysql
      - ./db/conf.d:/etc/mysql/conf.d
      - ./db/initdb.d:/docker-entrypoint-initdb.d
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "10"


  backend:
    depends_on:
      - db
    restart: always
    container_name: backend
    build:
      context: .
      dockerfile: backend.Dockerfile
    env_file:
      - .env.prod
    environment:
      TZ: Asia/Seoul
    expose:
      - "8000"
    volumes:
      - ./acbo:/app/acbo


  frontend:
    image: nginx:1.24-alpine
    restart: always
    depends_on:
      - backend
    container_name: frontend
    environment:
      TZ: Asia/Seoul
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./frontend/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
      - ./frontend/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./frontend/nginx/log:/var/log/nginx
      - ./frontend/dist:/usr/share/nginx/html
      - ./frontend/certbot/conf:/etc/letsencrypt
      - ./frontend/certbot/www:/var/www/certbot
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    container_name: certbot
    volumes:
      - ./frontend/certbot/conf:/etc/letsencrypt
      - ./frontend/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
